name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]

    permissions: write-all
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true

      - name: Output rust version for educational purposes
        run: rustup --version
  
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  
      - name: Build
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --release --verbose
  
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcx-${{ matrix.os }}-${{ matrix.target }}
          path: ${{ matrix.os == 'windows-latest' && 'target/release/mcx.exe' || 'target/release/mcx' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: |
            mcx-ubuntu-latest-x86_64-unknown-linux-gnu,
            mcx-macos-latest-x86_64-apple-darwin,
            mcx-windows-latest-x86_64-pc-windows-msvc
          path: ./mcx
  
      - name: Publish built binaries to GitHub releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${GITHUB_REF##*/} --generate-notes \
            ./mcx/mcx-ubuntu-latest-x86_64-unknown-linux-gnu/mcx#mcx-linux \
            ./mcx/mcx-macos-latest-x86_64-apple-darwin/mcx#mcx-macos \
            ./mcx/mcx-windows-latest-x86_64-pc-windows-msvc/mcx.exe#mcx-windows
