name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: mcx
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: mcx
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: mcx.exe

    permissions: write-all
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true

      - name: Output rust version for educational purposes
        run: rustup --version
 
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
 
      - name: Build
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --release --verbose
 
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcx-${{ matrix.os }}
          path: target/release/${{ matrix.artifact_name }}

  release:
    # Only run this job when a release is created
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: mcx-ubuntu-latest
          path: ./mcx-linux

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: mcx-macos-latest
          path: ./mcx-macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: mcx-windows-latest
          path: ./mcx-windows

      - name: Make binaries executable
        run: |
          chmod +x ./mcx-linux/mcx
          chmod +x ./mcx-macos/mcx
 
      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${GITHUB_REF#refs/tags/} \
            "./mcx-linux/mcx#mcx-linux" \
            "./mcx-macos/mcx#mcx-macos" \
            "./mcx-windows/mcx.exe#mcx-windows"
